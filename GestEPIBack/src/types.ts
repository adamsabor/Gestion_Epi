// ************************************************************************
// üéì FICHIER DE TYPES TYPESCRIPT - PROJET GESTEPI 
// Pour l'√©preuve E6 BTS SIO SLAM
// ************************************************************************

// üìö D√âFINITION DES TYPES
// Ce fichier est crucial car il d√©finit tous les types TypeScript utilis√©s dans l'application
// Il sert de "contrat" pour s'assurer que les donn√©es sont correctement structur√©es

// ********** INTERFACE EPI **********
// Une interface d√©finit la structure exacte d'un objet
// Pour l'E6 : C'est comme un plan qui dit quelles propri√©t√©s doit avoir un EPI
export interface EPI {
  id?: number;                    // Le ? signifie optionnel car auto-g√©n√©r√© en BDD
  identifiant_custom: string;     // Ex: "HARN-001" - Code unique pour tracer l'√©quipement
  marque: string;                 // Ex: "Petzl" - Important pour la conformit√©
  modele: string;                 // Ex: "AVAO BOD" - R√©f√©rence pr√©cise du fabricant
  num√©ro_s√©rie: string;          // Num√©ro unique du fabricant - Crucial pour la tra√ßabilit√©
  taille?: string;               // Optionnel - Utile pour les harnais (S, M, L...)
  couleur?: string;              // Optionnel - Pour identification visuelle rapide
  date_achat: string;            // Format YYYY-MM-DD - Pour le suivi comptable
  date_fabrication: string;      // Format YYYY-MM-DD - Pour calculer la dur√©e de vie
  date_mise_en_service: string;  // Format YYYY-MM-DD - D√©but du cycle de vie
  p√©riodicit√©_controle: number;  // En mois - Pour planifier les contr√¥les r√©glementaires
  epi_type_id: number;           // Cl√© √©trang√®re - Lien vers la table type_epi
  type_nom?: string;             // Ajout√© par jointure SQL: SELECT e.*, t.nom as type_nom FROM epi e JOIN type_epi t
}

// ********** INTERFACE CONTROLE **********
// Structure pour tracer les v√©rifications p√©riodiques obligatoires
// Pour l'E6 : Permet de suivre l'historique des contr√¥les de s√©curit√©
export interface Controle {
  id?: number;                   // Auto-incr√©ment√© en BDD
  date_controle: string;         // YYYY-MM-DD - Quand le contr√¥le a √©t√© fait
  gestionnaire_id: number;       // Qui a fait le contr√¥le - Lien vers table utilisateur
  epi_id: number;               // Quel EPI est contr√¥l√© - Lien vers table epi
  statut_id: number;            // R√©sultat du contr√¥le - Lien vers table statut
  remarques?: string;           // Notes techniques optionnelles
  // Champs de jointure - Viennent des requ√™tes SQL avec JOIN
  gestionnaire_nom?: string;    // Nom complet du contr√¥leur
  statut_nom?: string;         // Ex: "Op√©rationnel", "√Ä r√©parer"
  identifiant_custom?: string; // Code de l'EPI pour r√©f√©rence rapide
  marque?: string;            // Marque pour identification
  mod√®le?: string;            // Mod√®le pour identification
}

// ********** INTERFACE TYPE_EPI **********
// Table de r√©f√©rence pour cat√©goriser les √©quipements
// Pour l'E6 : Structure simple mais essentielle pour la classification
export interface TypeEPI {
  id?: number;                 // Cl√© primaire auto-incr√©ment√©e
  nom: string;                 // Ex: "Casque", "Harnais", "Longe"
}

// ********** INTERFACE STATUT_EPI **********
// √âtats possibles d'un √©quipement apr√®s contr√¥le
// Pour l'E6 : Permet de suivre le cycle de vie des EPI
export interface StatutEPI {
  id?: number;                 // Cl√© primaire auto-incr√©ment√©e
  nom: string;                 // Ex: "Op√©rationnel", "√Ä contr√¥ler"
}

// ********** INTERFACE UTILISATEUR **********
// Donn√©es des utilisateurs du syst√®me
// Pour l'E6 : Gestion des acc√®s et des responsabilit√©s
export interface Utilisateur {
  id?: number;                 // Cl√© primaire auto-incr√©ment√©e
  nom: string;                 // Nom de famille
  pr√©nom: string;             // Pr√©nom
  email: string;              // Sert d'identifiant unique
  user_type_id: number;       // R√¥le : admin, gestionnaire...
  type_nom?: string;          // Ajout√© par JOIN pour l'affichage
}

// ********** INTERFACE ALERTE **********
// √âtend l'interface EPI avec des infos de suivi
// Pour l'E6 : Gestion proactive des contr√¥les r√©glementaires
export interface Alerte extends EPI {
  dernier_controle: string;   // Date du dernier contr√¥le fait
  prochain_controle: string;  // Date limite du prochain contr√¥le
  statut: '√Ä jour' | '√Ä venir' | 'En retard';  // Union type - √âtat actuel
  urgence: 'normale' | 'moyenne' | 'haute';     // Union type - Priorit√©
}

// üìù R√âSUM√â POUR L'√âPREUVE E6
// Ce fichier est fondamental car il :
// 1. D√©finit tous les types de donn√©es de l'application
// 2. Assure la coh√©rence des donn√©es via TypeScript
// 3. Documente la structure de la base de donn√©es
// 4. Facilite la maintenance et l'√©volution du code
//
// Points techniques √† souligner :
// - Typage strict avec TypeScript
// - Relations entre tables (cl√©s √©trang√®res)
// - Jointures SQL
// - Bonnes pratiques de d√©veloppement