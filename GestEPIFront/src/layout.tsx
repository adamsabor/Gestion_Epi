// üìÑ Fichier : layout.tsx
// üìå Ce fichier fait partie du projet GestEPI (application de gestion des EPI pour cordistes)
// üß© R√¥le : D√©finit la structure visuelle commune √† toutes les pages (menu, en-t√™te, etc.)
// üîÑ Interagit avec : App.tsx, React Router, Material UI, autres composants React
// üë∂ Niveau d√©butant : Ce fichier est comme le "plan" de notre site, il d√©finit o√π va chaque √©l√©ment !

// ===== IMPORTS =====
// React est n√©cessaire pour cr√©er nos composants. ReactNode permet de typer les √©l√©ments enfants,
// useState permet de g√©rer l'√©tat local (comme un interrupteur on/off pour le menu)
import React, { ReactNode, useState } from 'react';

// Material UI nous fournit des composants d√©j√† stylis√©s. C'est comme une bo√Æte √† outils de pi√®ces
// d√©tach√©es pour construire notre interface :
import { 
  AppBar,        // Barre de navigation en haut, comme l'en-t√™te d'un document
  Box,           // Un conteneur flexible, comme une bo√Æte qu'on peut ajuster
  CssBaseline,   // R√©initialise les styles par d√©faut du navigateur pour plus de coh√©rence
  Drawer,        // Menu lat√©ral qui peut s'ouvrir/se fermer, comme un tiroir
  IconButton,    // Bouton sp√©cial pour les ic√¥nes, plus joli qu'un bouton standard
  List,          // Permet de cr√©er des listes structur√©es, comme une liste de courses
  ListItem,      // Un √©l√©ment dans une liste, comme une ligne dans la liste
  ListItemIcon,  // L'ic√¥ne √† gauche d'un √©l√©ment de liste
  ListItemText,  // Le texte d'un √©l√©ment de liste
  Toolbar,       // Conteneur pour organiser les √©l√©ments dans la barre de navigation
  Typography     // Composant pour g√©rer le texte de fa√ßon coh√©rente
} from '@mui/material';

// Importation des ic√¥nes qui seront utilis√©es dans le menu
// Ces ic√¥nes viennent de la biblioth√®que Material Icons
import MenuIcon from '@mui/icons-material/Menu';           // ‚ò∞ Ic√¥ne du menu "hamburger"
import DashboardIcon from '@mui/icons-material/Dashboard'; // üìä Ic√¥ne pour le tableau de bord
import SafetyDividerIcon from '@mui/icons-material/SafetyDivider'; // üõ°Ô∏è Ic√¥ne pour les EPIs
import WarningIcon from '@mui/icons-material/Warning';     // ‚ö†Ô∏è Ic√¥ne pour les alertes

// React Router permet la navigation entre les pages
// Outlet affiche le contenu de la route active, useNavigate permet de changer de page
import { Outlet, useNavigate } from 'react-router-dom';

// ===== D√âFINITION DU COMPOSANT =====
// Layout est un composant fonctionnel TypeScript (FC = Function Component)
// Il sert de structure commune √† toutes les pages
const Layout: React.FC = () => {
  // Gestion de l'√©tat du menu (ouvert/ferm√©) avec useState
  // open = √©tat actuel, setOpen = fonction pour modifier l'√©tat
  const [open, setOpen] = useState(false);
  
  // Hook de navigation de React Router
  // Permet de changer de page programmatiquement
  const navigate = useNavigate();

  // Fonction qui inverse l'√©tat du menu (ouvert ‚Üî ferm√©)
  // Appel√©e quand on clique sur le bouton du menu
  const toggleDrawer = () => {
    setOpen(!open);
  };

  // Configuration des √©l√©ments du menu
  // Chaque √©l√©ment a un texte, une ic√¥ne et un chemin de navigation
  const menuItems = [
    { text: 'Tableau de bord', icon: <DashboardIcon />, path: '/' },
    { text: 'EPIs', icon: <SafetyDividerIcon />, path: '/epis' },
    { text: 'Alertes', icon: <WarningIcon />, path: '/alertes' },
  ];

  // Structure visuelle du composant
  return (
    // Box principal qui contient tout le layout
    // display: 'flex' permet une mise en page flexible
    <Box sx={{ display: 'flex' }}>
      {/* Barre de navigation fixe en haut de l'√©cran */}
      <AppBar position="fixed">
        <Toolbar>
          {/* Bouton pour ouvrir/fermer le menu */}
          <IconButton
            color="inherit"     // H√©rite la couleur du parent
            aria-label="ouvrir le menu"  // Pour l'accessibilit√©
            edge="start"        // Align√© √† gauche
            onClick={toggleDrawer}  // Action au clic
          >
            <MenuIcon />
          </IconButton>
          {/* Titre de l'application */}
          <Typography variant="h6" noWrap component="div">
            GestEPI
          </Typography>
        </Toolbar>
      </AppBar>

      {/* Menu lat√©ral (Drawer) qui s'ouvre temporairement */}
      <Drawer
        variant="temporary"  // Le menu se ferme quand on clique ailleurs
        open={open}         // √âtat ouvert/ferm√©
        onClose={toggleDrawer}  // Action √† la fermeture
      >
        {/* Liste des √©l√©ments du menu */}
        <List>
          {/* On cr√©e un √©l√©ment de liste pour chaque item du menu */}
          {menuItems.map((item) => (
            <ListItem
              button          // Rend l'√©l√©ment cliquable
              key={item.text} // Cl√© unique pour React
              onClick={() => {
                navigate(item.path);  // Change de page
                toggleDrawer();       // Ferme le menu
              }}
            >
              <ListItemIcon>{item.icon}</ListItemIcon>
              <ListItemText primary={item.text} />
            </ListItem>
          ))}
        </List>
      </Drawer>

      {/* Zone principale de contenu */}
      <Box component="main" sx={{ flexGrow: 1, p: 3 }}>
        <Toolbar /> {/* Espace pour √©viter que le contenu soit cach√© sous la barre de navigation */}
        <Outlet /> {/* Ici s'affiche le contenu sp√©cifique √† chaque route */}
      </Box>
    </Box>
  );
};

// On exporte le composant pour pouvoir l'utiliser ailleurs
export default Layout;

/*
R√âSUM√â DU FICHIER layout.tsx :
Ce fichier est le "CADRE" de notre application. C'est comme le squelette qui maintient tout ensemble !

1. STRUCTURE :
   - Une barre de navigation en haut (AppBar)
   - Un menu lat√©ral qui peut s'ouvrir/fermer (Drawer)
   - Une zone principale pour le contenu (Box)

2. FONCTIONNALIT√âS :
   - Navigation entre les diff√©rentes pages
   - Menu responsive qui s'adapte aux diff√©rentes tailles d'√©cran
   - Structure coh√©rente pour toutes les pages

3. COMPOSANTS IMPORTANTS :
   - AppBar : La barre en haut avec le titre et le bouton menu
   - Drawer : Le menu lat√©ral qui contient les liens vers les diff√©rentes pages
   - Outlet : L'endroit o√π s'affiche le contenu sp√©cifique √† chaque page

4. INTERACTIONS :
   - Communique avec React Router pour la navigation
   - Utilise Material UI pour un design professionnel
   - G√®re l'√©tat du menu (ouvert/ferm√©)

C'est comme la structure d'une maison : elle d√©finit o√π vont les murs, les portes et les fen√™tres, 
mais le contenu (meubles, d√©coration) change selon la pi√®ce !
*/
